using System;
using System.Collections.Generic;
using System.Web.UI.WebControls;
using CPRG214.Marina.Data;
using CPRG214.Marina.App.Controls;

namespace CPRG214.Marina.App.Secure
{
    public partial class LeaseSlip : System.Web.UI.Page
    {
        //declare list
        List<Slip> selectedSlipList;

      protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack || Session["leaseslip"] is null)
            {
                //instantiate List
                selectedSlipList = new List<Slip>();
                //adding new session
                Session.Add("leaseslip", selectedSlipList);
            }
            
            DockSelector.DockSelect += DockSelector_DockSelect;
            //displays customer's previously leased items
            uxPreviouslyLeased.DataSource = LeaseManager.Find(Convert.ToInt32(Session["custID"]));
            uxPreviouslyLeased.DataBind();
        }
        /// <summary>
        /// Custom made event handler for dock selector 
        /// </summary>
        /// <param name="sender">reference to the control/object that raisesthe event</param>
        /// <param name="e">event data</param>
        private void DockSelector_DockSelect(object sender, DockEventArgs e)
        {
            var dockID = e.ID;
            //found all available slips associated by ID 
            var availableSlips = SlipManager.FindAvailableSlipByDock(dockID);
            //databound the available slip from the database
            uxAvailSlipSortedByDock1.DataSource = availableSlips;
            uxAvailSlipSortedByDock1.DataBind();
            //autogenerated select button, has 'Select' as default
            //changing default to "Lease"
            foreach (GridViewRow row in uxAvailSlipSortedByDock1.Rows)
            {
                LinkButton lb = (LinkButton)row.Cells[0].Controls[0];
                lb.Text = "Lease";

            }
        }
        /// <summary>
        /// Event handler for when user clicks on "Lease"
        /// </summary>
        /// <param name="sender">reference to the control/object that raises the event</param>
        /// <param name="e">event data</param>
        protected void uxAvailSlipSortedByDock1_SelectedIndexChanged1(object sender, EventArgs e)
        {
            //build selected slip by function
            Slip selectedSlip = buildSelectedSlip();
            //add selected slip to database by a function
            addSelectedSlipToDatabase(selectedSlip);
            //add to new lease to customer by a function
            addNewLease(selectedSlip.ID);
            //refreshs page
            Response.Redirect(Request.RawUrl.ToString());
        }
        /// <summary>
        /// Add new lease to database
        /// </summary>
        /// <param name="selectedSlipId">slip that was selected</param>
        private void addNewLease(int selectedSlipId)
        {
            int slipID = Convert.ToInt32(selectedSlipId);
            int custID = Convert.ToInt32(Session["custID"]);

            LeaseManager.Add(slipID, custID);
        }
        /// <summary>
        /// creates Slip object 
        /// </summary>
        /// <returns>Slip object</returns>
        private Slip buildSelectedSlip()
        {
            Slip selectedSlip = new Slip();

            selectedSlip.ID = Convert.ToInt32(uxAvailSlipSortedByDock1.SelectedRow.Cells[1].Text);
            selectedSlip.Width = Convert.ToInt32(uxAvailSlipSortedByDock1.SelectedRow.Cells[2].Text);
            selectedSlip.Length = Convert.ToInt32(uxAvailSlipSortedByDock1.SelectedRow.Cells[3].Text);
            selectedSlip.DockID = Convert.ToInt32(uxAvailSlipSortedByDock1.SelectedRow.Cells[4].Text);

            return selectedSlip;
        }
        /// <summary>
        /// Adds selected list to database
        /// </summary>
        /// <param name="selectedSlip">slip that was selected in the grid table</param>
        private void addSelectedSlipToDatabase(Slip selectedSlip)
        {
            selectedSlipList = (List<Slip>)Session["leaseslip"];
            selectedSlipList.Add(selectedSlip);
        }
    }
}